"""
Подвиг 4. Объявите в программе класс Player (игрок), объекты которого создаются командой:

player = Player(name, old, score)
где name - имя игрока (строка);
old - возраст игрока (целое число);
score - набранные очки в игре (целое число).
В каждом объекте класса Player должны создаваться аналогичные локальные атрибуты: name, old, score.

С объектами класса Player должна работать функция:
bool(player)
которая возвращает True, если число очков больше нуля, и False - в противном случае.

С помощью команды:

lst_in = ['Балакирев; 34; 2048',
          'Mediel; 27; 0',
          'Влад; 18; 9012',
          'Nina P; 33; 0']
считываются строки из входного потока в список строк lst_in. Каждая строка записана в формате:

"имя; возраст; очки"

Например:

Балакирев; 34; 2048
Mediel; 27; 0
Влад; 18; 9012
Nina P; 33; 0

Каждую строку списка lst_in необходимо представить в виде объекта класса Player с соответствующими данными.
И из этих объектов сформировать список players.

Отфильтруйте этот список (создайте новый: players_filtered), оставив всех игроков с числом очков больше нуля.
Используйте для этого стандартную функцию filter() совместно с функцией bool() языка Python.

P.S. На экран ничего выводить не нужно.

Sample Input:

lst_in = ['Балакирев; 34; 2048',
          'Mediel; 27; 0',
          'Влад; 18; 9012',
          'Nina P; 33; 0']
Sample Output:
"""

# ваш код:
# считывание списка из входного потока (эту строчку и список lst_in не менять)
lst_in = ['Балакирев; 34; 2048',
          'Mediel; 27; 0',
          'Влад; 18; 9012',
          'Nina P; 33; 0']


class Player:
    def __init__(self, name, old, score):
        self.name = str(name)
        self.old = int(old)
        self.score = int(score)

    # С объектами класса Player должна работать функция:
    # bool(player)
    # которая возвращает True, если число очков больше нуля, и False - в противном случае.
    def __bool__(self):
        return self.score > 0


# Каждую строку списка lst_in необходимо представить в виде объекта класса Player с соответствующими данными.
# И из этих объектов сформировать список players.
players = [Player(*i.split(';')) for i in lst_in]

# Отфильтруйте этот список (создайте новый: players_filtered), оставив всех игроков с числом очков больше нуля.
# Используйте для этого стандартную функцию filter() совместно с функцией bool() языка Python.
players_filtered = list(filter(bool, players))
# end ваш код

# TEST-TASK___________________________________
from test3_7.test_3_7_4 import test_4

test_4(Player, players, lst_in, players_filtered)
# END
