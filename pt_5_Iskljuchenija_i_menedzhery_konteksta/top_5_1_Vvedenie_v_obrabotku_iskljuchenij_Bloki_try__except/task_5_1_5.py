"""
Подвиг 5. В программе объявлен класс Point:

class Point:
    def __init__(self, x, y):
        self._x = x
        self._y = y
И создается объект этого класса:

pt = Point(1, 2)
Далее, вам нужно обратиться к атрибуту z объекта pt и, если такой атрибут существует, то вывести его значение на экран.
Иначе вывести строку (без кавычек):
"Атрибут с именем z не существует"

Реализовать проверку следует с помощью блоков try/except.

ПОДСКАЗКА: при обращении к несуществующему атрибуту генерируется исключение AttributeError.
"""

# не изменять !!
import io
import sys

console_out = io.StringIO()  # Создаем буфер
sys.stdout = console_out  # Перенаправляем стандартный вывод (stdout) в буфер


# end


class Point:
    def __init__(self, x, y):
        self._x = x
        self._y = y


pt = Point(1, 2)

# ваш код:
try:
    pt.z
except AttributeError:
    print('Атрибут с именем z не существует')
# end ваш код

# TEST-TASK___________________________________
output = console_out.getvalue()  # Получаем содержимое буфера в переменную (для проверки)
sys.stdout = sys.__stdout__  # Возвращаем стандартный вывод (stdout) в нормальное состояние
print(output)

assert output == 'Атрибут с именем z не существует\n', \
    "при ошибке AttributeError нужно вывести текст - Атрибут с именем z не существует"

print("Правильное решение!")
