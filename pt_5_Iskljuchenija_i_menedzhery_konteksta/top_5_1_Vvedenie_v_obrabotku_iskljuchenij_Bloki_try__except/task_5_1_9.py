"""
Видео-разбор подвига (решение смотреть только после своей попытки): https://youtu.be/eKxzgkKD1fI

Подвиг 9. Объявите в программе класс Triangle, объекты которого создаются командой:
tr = Triangle(a, b, c)
где a, b, c - длины сторон треугольника (любые положительные числа).
В каждом объекте класса Triangle должны формироваться локальные атрибуты _a, _b, _c с соответствующими значениями.

Если в качестве хотя бы одной величины a, b, c передается не числовое значение, или меньше либо равно нулю,
то должно генерироваться исключение командой:
raise TypeError('стороны треугольника должны быть положительными числами')

Если из переданных значений a, b, c нельзя составить треугольник
(условие: каждая сторона должна быть меньше суммы двух других), то генерировать исключение командой:

raise ValueError('из указанных длин сторон нельзя составить треугольник')

Затем, на основе следующего набора данных:
input_data = [(1.0, 4.54, 3), ('abc', 1, 2, 3), (-3, 3, 5.2), (4.2, 5.7, 8.7), (True, 3, 5), (7, 4, 6)]
необходимо сформировать объекты класса Triangle, но только в том случае, если не возникло никаких исключений.
Все созданные объекты представить в виде списка с именем lst_tr.

P.S. В программе нужно только сформировать список lst_tr. На экран ничего выводить не нужно.
"""


# ваш код:
# здесь объявляйте класс Triangle
class Triangle:
    def __init__(self, a, b, c):
        if all(True if type(_) in (int, float) and _ > 0 else False for _ in (a, b, c)):
            if a < b + c and b < a + c and c < a + b:
                self._a = a
                self._b = b
                self._c = c
            else:
                raise ValueError('из указанных длин сторон нельзя составить треугольник')

        else:
            raise TypeError('стороны треугольника должны быть положительными числами')


# end ваш код

# эту строчку не менять (переменную input_data также не менять)
input_data = [(1.0, 4.54, 3), ('abc', 1, 2, 3), (-3, 3, 5.2), (4.2, 5.7, 8.7), (True, 3, 5), (7, 4, 6)]

# ваш код:
# здесь формируйте список lst_tr
lst_tr = list()
for i in input_data:
    try:
        lst_tr.append(Triangle(*i))
    except:
        continue
# end ваш код
