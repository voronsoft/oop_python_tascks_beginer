"""
Подвиг 3. В программе объявлены три класса следующим образом:

class A:
    def __init__(self, name, old):
        super().__init__()
        self.name = name
        self.old = old


class B:
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)


class C(B, A):
    def __init__(self, name, old, weight, height):
        super().__init__(name, old)
        self.weight = weight
        self.height = height


И создается объект класса C:
person = C("Balakirev", 33, 80, 185)

Выберите все верные утверждения, связанные с этой программой.


в момент создания объекта person произойдет ошибка, так как аргументы name, old предназначены для инициализатора класса A, а первым вызывается инициализатор класса B
программа выполнится успешно, будет создан объект person с набором указанных локальных атрибутов
программа будет успешно выполняться вне зависимости от порядка наследования классов A и B в дочернем классе C
программа будет успешно работать, только если поменять порядок наследования классов в дочернем классе C, то есть, записав его объявление как class C(A, B): ...
"""

# Вставьте правильные ответы в переменную
# Пример temp = ['ответ', 'ответ' ]
temp = []
# Запустите файл на исполнение для проверки

# TEST-TASK___________________________________
from test4_6.test_4_6_3 import test_3

test_3(temp)
# END
