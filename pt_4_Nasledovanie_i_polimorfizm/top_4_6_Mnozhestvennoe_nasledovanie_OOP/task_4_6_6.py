"""
Подвиг 6. Вам доверили разработать набор классов для описания рецептов различных блюд. И подсказали, что вначале нужно объявить отдельные классы для разных продуктов питания, например:

# Класс для описания мяса
class Meat:

    ...

# Класс для описания рыб
class Fish:
    ...

# Класс для описания картофель
class Potatoes:
    ...

И так далее. Затем, вам в голову приходит два варианта использования этих классов для описания конкретных рецептов блюд:
___________
1-й вариант. Использовать классы продуктов в качестве базовых. Например:
# Рецепт мясного пюре
class MeatPuree(Meat, Potatoes):
    ...

# Рецепт запеченной рыб
class BakedFish(Fish, Potatoes):
    ...

И так далее.
___________
2-й вариант. Использовать объекты классов продуктов в качестве значений локальных атрибутов. Например:
class MeatPuree:
    def __init__(self, meat, potatoes):
        self.__meat = meat
        self.__potatoes = potatoes
где 

meat = Meat()
potatoes = Potatoes()
И так для всех классов рецептов.
___________

Какой из этих вариантов предпочтительнее использовать на практике и почему?

    Лучше 2-й вариант, так как здесь класс MeatPuree можно организовать для самых разных рецептов мясного пюре (с разными ингредиентами, а не только теми, что будут указаны в качестве базовых классов).
Лучше 1-й вариант, так как здесь явно перечисляются все необходимые ингредиенты в виде базовых классов и дочерний класс рецепта становится единым целым, неделимой единицей.
    Лучше 2-й вариант, так как он более универсален, проще масштабируется, а большое количество базовых классов делает программу сложной для понимания.
Лучше 1-й вариант, так как в дочерних классах рецептов напрямую доступны все разрешенные атрибуты базовых классов (ингредиентов), что значительно упрощает процесс программирования.
"""
