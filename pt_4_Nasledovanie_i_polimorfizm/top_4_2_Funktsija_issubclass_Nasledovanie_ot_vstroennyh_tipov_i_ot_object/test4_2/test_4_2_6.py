# TEST-TASK___________________________________
def test_6(Tuple):
    assert issubclass(Tuple, tuple), "ошибка, класс Tuple должен быть наследником класса tuple"
    assert "__add__" in Tuple.__dict__, "это задание проще решить используя (переопределив) метод __add__ в вашем классе"
    t = Tuple([1, 2, 3])
    assert t == (1, 2, 3), "ошибка при операции t = Tuple([1, 2, 3])\n" \
                           "Должно быть: (1, 2, 3)"

    t = Tuple([1, 2, 3])
    t = t + "Python"
    assert t == (1, 2, 3, 'P', 'y', 't', 'h', 'o', 'n'), \
        "ошибка при операции t = t + 'Python'\n Должно быть: (1, 2, 3, 'P', 'y', 't', 'h', 'o', 'n')"

    t = Tuple([1, 2, 3])
    t = (t + "Python") + "ООП"
    assert t == (1, 2, 3, 'P', 'y', 't', 'h', 'o', 'n', 'О', 'О', 'П'), \
        "ошибка при операции t = (t + 'Python') + 'ООП'\n Должно быть: (1, 2, 3, 'P', 'y', 't', 'h', 'o', 'n', 'О', 'О', 'П')"

    t = Tuple([1, 2, 3])
    t = t + {1: "a", 2: "b"}
    assert t == (1, 2, 3, 1, 2), "ошибка при операции t = t + {1: 'a', 2: 'b'}\n Должно быть: (1, 2, 3, 1, 2)"

    print("Правильно, молодец !")
