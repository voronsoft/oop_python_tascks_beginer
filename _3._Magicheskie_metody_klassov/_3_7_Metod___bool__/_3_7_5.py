"""
Подвиг 5. Объявите в программе класс MailBox (почтовый ящик), объекты которого создаются командой:
mail = MailBox()
Каждый объект этого класса должен содержать локальный публичный атрибут:
inbox_list - список из принятых писем.

Также в классе MailBox должен присутствовать метод:
receive(self) - прием новых писем
Этот метод должен читать данные из входного потока командой:
lst_in = list(map(str.strip, sys.stdin.readlines()))
В результате формируется список lst_in из строк. Каждая строка записана в формате:
"от кого; заголовок; текст письма"

Например:

sc_lib@list.ru; От Балакирева; Успехов в IT!
mail@list.ru; Выгодное предложение; Вам одобрен кредит.
mail123@list.ru; Розыгрыш; Вы выиграли 1 млн. руб. Переведите 30 тыс. руб., чтобы его получить.

Каждая строчка списка lst_in должна быть представлена объектом класса MailItem, объекты которого создаются командой:

item = MailItem(mail_from, title, content)
где
mail_from - email отправителя (строка);
title - заголовок письма (строка),
content - содержимое письма (строка).
В каждом объекте класса MailItem должны формироваться соответствующие локальные атрибуты (с именами: mail_from, title, content).
И дополнительно атрибут is_read (прочитано ли) с начальным значением False.

В классе MailItem должен быть реализован метод:
set_read(self, fl_read) - для отметки, что письмо прочитано
(метод должен устанавливать атрибут is_read = fl_read, если True, то письмо прочитано, если False, то не прочитано).

С каждым объектом класса MailItem должна работать функция:
bool(item)
которая возвращает True для прочитанного письма и False для непрочитанного.

Вызовите метод:

mail.receive()
Отметьте первое и последнее письмо в списке mail.inbox_list, как прочитанное (используйте для этого метод set_read).
Затем, сформируйте в программе список (глобальный) с именем inbox_list_filtered из прочитанных писем,
используя стандартную функцию filter() совместно с функцией bool() языка Python.

P.S. На экран ничего выводить не нужно.

Sample Input:

sc_lib@list.ru; От Балакирева; Успехов в IT!
mail@list.ru; Выгодное предложение; Вам одобрен кредит.
mail123@list.ru; Розыгрыш; Вы выиграли 1 млн. руб. Переведите 30 тыс. руб., чтобы его получить.
Sample Output:
"""
import sys


# здесь пишите программу
class MailBox:
    """Почтовый ящик"""

    def __init__(self):
        self.inbox_list = list()

    # Также в классе MailBox должен присутствовать метод:
    # receive(self) - прием новых писем
    # Этот метод должен читать данные из входного потока командой:
    # lst_in = list(map(str.strip, sys.stdin.readlines()))
    # В результате формируется список lst_in из строк. Каждая строка записана в формате:
    # "от кого; заголовок; текст письма"
    def receive(self, lst_mail):
        """прием новых писем"""
        lst_in_ = [MailItem(*i.split(';')) for i in lst_mail]
        [self.inbox_list.append(_) for _ in lst_in_]


class MailItem:
    def __init__(self, mail_from, title, content):
        self.mail_from = str(mail_from)  # email отправителя (строка)
        self.title = str(title)  # заголовок письма (строка)
        self.content = str(content)  # содержимое письма

        # И дополнительно атрибут is_read (прочитано ли) с начальным значением False.
        self.is_read = False

    # В классе MailItem должен быть реализован метод:
    # set_read(self, fl_read) - для отметки, что письмо прочитано
    # (метод должен устанавливать атрибут is_read = fl_read, если True, то письмо прочитано, если False, то не прочитано).
    def set_read(self, fl_read):
        if fl_read:
            self.is_read = True

    # С каждым объектом класса MailItem должна работать функция:
    # bool(item)
    # которая возвращает True для прочитанного письма и False для непрочитанного.
    def __bool__(self):
        return self.is_read


# TEST
lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['sc_lib@list.ru; От Балакирева; Успехов в IT!',
#           'mail@list.ru; Выгодное предложение; Вам одобрен кредит.',
#           'mail123@list.ru; Розыгрыш; Вы выиграли 1 млн. руб. Переведите 30 тыс. руб., чтобы его получить.'
#           ]
mail = MailBox()
# Вызовите метод:
mail.receive(lst_in)
# Отметьте первое и последнее письмо в списке mail.inbox_list, как прочитанное (используйте для этого метод set_read).
mail.inbox_list[0].set_read(True)
mail.inbox_list[-1].set_read(True)
# Затем, сформируйте в программе список (глобальный) с именем inbox_list_filtered из прочитанных писем,
# используя стандартную функцию filter() совместно с функцией bool() языка Python.
inbox_list_filtered = list(filter(bool, mail.inbox_list))
