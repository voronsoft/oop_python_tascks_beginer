"""
Видео-разбор подвига (решение смотреть только после своей попытки): https://youtu.be/U4zwfmbEiCI

Подвиг 9 (на повторение материала). Объявите класс Point для представления точек на плоскости.
Создавать объекты этого класса предполагается командой:

pt = Point(x, y)
Здесь x, y - числовые координаты точки на плоскости (числа),
то есть, в каждом объекте этого класса создаются локальные свойства x, y, которые хранят конкретные координаты точки.

Необходимо в классе Point реализовать метод clone(self),
который бы создавал новый объект класса Point как копию текущего объекта
с локальными атрибутами x, y и соответствующими значениями.

Создайте в программе объект pt класса Point и еще один объект pt_clone через вызов метода clone.

P.S. В программе на экран ничего выводить не нужно.
"""


# здесь объявляется класс Point
class Point:

    def __new__(cls, *args, **qargs):
        super().__new__(cls)
        return super().__new__(cls)

    def __init__(self, x, y):
        self.x = int(x)
        self.y = int(y)

    # Необходимо в классе Point реализовать метод clone(self),
    # который бы создавал новый объект класса Point как копию текущего объекта
    # с локальными атрибутами x, y и соответствующими значениями.
    def clone(self):
        return Point(self.x, self.y)


# Создайте в программе объект pt класса Point
pt = Point(10, 50)

# и еще один объект pt_clone через вызов метода clone.
# pt_clone = Point.clone('a')
pt_clone = pt.clone()

# TEST-TASK___________________________________

assert id(pt) != id(pt_clone), "Ошибка, два объекта имеют одинаковый id. " \
                               "Нужно что бы объекты были разные, но с одинаковыми данными"
assert hasattr(pt, 'x') and hasattr(pt, 'y'), "в объекте должны быть 2 атрибута x и y"
assert hasattr(pt_clone, 'x') and hasattr(pt_clone, 'y'), "в объекте должны быть 2 атрибута x и y"
assert pt.x == pt_clone.x and pt.y == pt_clone.y, "Атрибуты имеют разные значения"
print("Правильный ответ !")
